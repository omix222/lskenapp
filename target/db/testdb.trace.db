2017-09-18 22:02:09 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "CREATE TABLE IF NOT EXISTS MASSEGES(MESSAGEID INT PRIMARY KEY AUTO[*]-INCREMENT,TYPE VARCHAR(30), MESSAGEDETAIL VARCHAR(30),FROMUSERID VARCHAR(30),GROUPUSERID VARCHAR(30),POSTDATE TIMESTAMP "; 期待されるステートメント "HASH, AUTO_INCREMENT, NOT, NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS MASSEGES(MESSAGEID INT PRIMARY KEY AUTO[*]-INCREMENT,TYPE VARCHAR(30), MESSAGEDETAIL VARCHAR(30),FROMUSERID VARCHAR(30),GROUPUSERID VARCHAR(30),POSTDATE TIMESTAMP "; expected "HASH, AUTO_INCREMENT, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE table IF NOT EXISTS masseges(messageId int primary key auto-increment,type varchar(30), messageDetail varchar(30),fromUserId varchar(30),groupUserId varchar(30),postDate TIMESTAMP [42001-196]
2017-09-18 22:03:25 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "CREATE TABLE IF NOT EXISTS MASSEGES(MESSAGEID INT PRIMARY KEY AUTO[*]-INCREMENT,TYPE VARCHAR(30), MESSAGEDETAIL VARCHAR(30),FROMUSERID VARCHAR(30),GROUPUSERID VARCHAR(30),POSTDATE TIMESTAMP) "; 期待されるステートメント "HASH, AUTO_INCREMENT, NOT, NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS MASSEGES(MESSAGEID INT PRIMARY KEY AUTO[*]-INCREMENT,TYPE VARCHAR(30), MESSAGEDETAIL VARCHAR(30),FROMUSERID VARCHAR(30),GROUPUSERID VARCHAR(30),POSTDATE TIMESTAMP) "; expected "HASH, AUTO_INCREMENT, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE table IF NOT EXISTS masseges(messageId int primary key auto-increment,type varchar(30), messageDetail varchar(30),fromUserId varchar(30),groupUserId varchar(30),postDate TIMESTAMP) [42001-196]
2017-09-18 22:09:40 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "CREATE TABLE IF NOT EXISTS MASSEGES(MESSAGEID INT PRIMARY KEY AUTO[*]-INCREMENT, MESSAGETYPE VARCHAR(30), MESSAGEDETAIL VARCHAR(30),FROMUSERID VARCHAR(30),GROUPUSERID VARCHAR(30),POSTDATE TIMESTAMP) "; 期待されるステートメント "HASH, AUTO_INCREMENT, NOT, NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS MASSEGES(MESSAGEID INT PRIMARY KEY AUTO[*]-INCREMENT, MESSAGETYPE VARCHAR(30), MESSAGEDETAIL VARCHAR(30),FROMUSERID VARCHAR(30),GROUPUSERID VARCHAR(30),POSTDATE TIMESTAMP) "; expected "HASH, AUTO_INCREMENT, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE table IF NOT EXISTS masseges(messageId int primary key auto-increment, messageType varchar(30), messageDetail varchar(30),fromUserId varchar(30),groupUserId varchar(30),postDate TIMESTAMP) [42001-196]
2017-09-18 22:10:56 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "CREATE TABLE MASSEGES(MESSAGEID INT PRIMARY KEY AUTO[*]-INCREMENT, MESSAGETYPE VARCHAR(30), MESSAGEDETAIL VARCHAR(30),FROMUSERID VARCHAR(30),GROUPUSERID VARCHAR(30),POSTDATE TIMESTAMP) "; 期待されるステートメント "HASH, AUTO_INCREMENT, NOT, NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE MASSEGES(MESSAGEID INT PRIMARY KEY AUTO[*]-INCREMENT, MESSAGETYPE VARCHAR(30), MESSAGEDETAIL VARCHAR(30),FROMUSERID VARCHAR(30),GROUPUSERID VARCHAR(30),POSTDATE TIMESTAMP) "; expected "HASH, AUTO_INCREMENT, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE table masseges(messageId int primary key auto-increment, messageType varchar(30), messageDetail varchar(30),fromUserId varchar(30),groupUserId varchar(30),postDate TIMESTAMP) [42001-196]
2017-09-18 22:16:56 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: テーブル "MESSAGES" が見つかりません
Table "MESSAGES" not found; SQL statement:
INSERT INTO messages(messageId, type, messageDetail, fromUserId, groupId) VALUES(1, 'text','hello', 'u001','g001') [42102-196]
2017-09-18 22:17:48 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: 列 "GROUPID" が見つかりません
Column "GROUPID" not found; SQL statement:
INSERT INTO messages(messageId, type, messageDetail, fromUserId, groupId) VALUES(1, 'text','hello', 'u001','g001') [42122-196]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:680)
	at org.h2.command.Parser.parseColumn(Parser.java:887)
	at org.h2.command.Parser.parseColumnList(Parser.java:871)
	at org.h2.command.Parser.parseInsert(Parser.java:1071)
	at org.h2.command.Parser.parsePrepared(Parser.java:417)
	at org.h2.command.Parser.parse(Parser.java:321)
	at org.h2.command.Parser.parse(Parser.java:293)
	at org.h2.command.Parser.prepareCommand(Parser.java:258)
	at org.h2.engine.Session.prepareLocal(Session.java:578)
	at org.h2.engine.Session.prepareCommand(Session.java:519)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1204)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:176)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:164)
	at net.sf.log4jdbc.StatementSpy.execute(StatementSpy.java:839)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:470)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:192)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runDataScripts(DataSourceInitializer.java:128)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.onApplicationEvent(DataSourceInitializer.java:118)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.onApplicationEvent(DataSourceInitializer.java:51)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runSchemaScripts(DataSourceInitializer.java:95)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.init(DataSourceInitializer.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:220)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:345)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:340)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor.postProcessAfterInitialization(DataSourceInitializerPostProcessor.java:62)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:857)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.lsken.lskenapp.LskenappApplication.main(LskenappApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2017-09-18 22:20:58 jdbc[12]: exception
org.h2.jdbc.JdbcSQLException: SQLステートメントに文法エラーがあります "INSERT INTO MESSAGES(MESSAGEID, TYPE, MESSAGEDETAIL, FROMUSERID, GROUPID,POSTDATE) VALUES(1, 'text','hello', 'u001','g001',2018-09-18 22[*]:22:45) "; 期待されるステートメント "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, ILIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"
Syntax error in SQL statement "INSERT INTO MESSAGES(MESSAGEID, TYPE, MESSAGEDETAIL, FROMUSERID, GROUPID,POSTDATE) VALUES(1, 'text','hello', 'u001','g001',2018-09-18 22[*]:22:45) "; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, ILIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
INSERT INTO messages(messageId, type, messageDetail, fromUserId, groupId,postDate) VALUES(1, 'text','hello', 'u001','g001',2018-09-18 22:22:45) [42001-196]
